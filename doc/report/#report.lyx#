#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{pdflscape}
\usepackage{fmtcount}
\usepackage[super]{nth}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract
Blablabla
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
Objectives
\end_layout

\begin_layout Standard
Develop a web tool to help practitioners to carry out Rapid Assessment for
 Markets
\end_layout

\begin_layout Section
Development Methodology
\end_layout

\begin_layout Standard
Intro
\end_layout

\begin_layout Subsection
Implementing agile methodologies (Kanban)
\end_layout

\begin_layout Subsubsection
Taiga/Trello
\end_layout

\begin_layout Subsection
Branching
\end_layout

\begin_layout Subsubsection
Git
\end_layout

\begin_layout Subsection
Issues tracking
\end_layout

\begin_layout Subsection
Behavior Driven Development
\end_layout

\begin_layout Standard
After the third sprint, Behavoir Driven Development (BDD) was adopted in
 order to better fit user's requirements and to make easier his involvement
 in the development, in addition to optimizing testing.
 The main reason to choose BDD instead of Test Driven Development (TDD),
 which is also an agile style of programming, has been the opportunity of
 involvement of future users, who could not have a technical background.
 Thus, talking about behavoirs instead of requirements and writing them
 in a natural language, the communication and the understanding among all
 the parts (users and developer) has improved.
\end_layout

\begin_layout Standard
Therefore, since the third sprint, this approach has been carried out in
 this way:
\end_layout

\begin_layout Enumerate
Beginning with the definitions of the needed behavoir -which has been always
 agreed with the user,
\end_layout

\begin_layout Enumerate
followed by the development -writing 
\begin_inset Quotes eld
\end_inset

just enough
\begin_inset Quotes erd
\end_inset

 code and as simple as possible to accomplish the behavoir,
\end_layout

\begin_layout Enumerate
and redesigning or refactoring the code if necessary.
\end_layout

\begin_layout Subsection
Documentation
\end_layout

\begin_layout Subsubsection
Javadoc
\end_layout

\begin_layout Section
Testing Framework
\end_layout

\begin_layout Standard
Intro
\end_layout

\begin_layout Subsection
Unit Tests / Whitebox
\end_layout

\begin_layout Subsubsection
JUnit
\end_layout

\begin_layout Subsubsection
Mockito
\end_layout

\begin_layout Subsection
Integration and Functional Tests / BlackBox
\end_layout

\begin_layout Subsubsection
Arquillian
\end_layout

\begin_layout Subsubsection
Selenium
\end_layout

\begin_layout Standard
Problems with Firefox updating
\end_layout

\begin_layout Subsubsection
Cucumber-JVM
\end_layout

\begin_layout Subsection
Usability
\end_layout

\begin_layout Subsection
Reporting
\end_layout

\begin_layout Standard
Allure
\end_layout

\begin_layout Section
Analysis and Requirements
\end_layout

\begin_layout Section
Design
\end_layout

\begin_layout Standard
Intro
\end_layout

\begin_layout Subsection
Technologies
\end_layout

\begin_layout Subsubsection
Liferay
\begin_inset CommandInset label
LatexCommand label
name "subsec:Liferay"

\end_inset


\end_layout

\begin_layout Standard
Discuss about Service Builder
\end_layout

\begin_layout Subsubsection
JavaServer Faces (JSF) & Components Design
\begin_inset CommandInset label
LatexCommand label
name "subsec:JSF"

\end_inset


\end_layout

\begin_layout Standard
Components design describing the whole system and invariable parts.
\end_layout

\begin_layout Standard
http://stackoverflow.com/questions/10111387/understanding-jsf-as-a-mvc-framework
\end_layout

\begin_layout Standard
http://stackoverflow.com/questions/5104094/what-components-are-mvc-in-jsf-mvc-fra
mework
\end_layout

\begin_layout Standard
http://stackoverflow.com/questions/4573419/what-are-the-main-advantages-of-mvc-pa
ttern-over-the-old-fashioned-3-layer-patte/4573554#4573554
\end_layout

\begin_layout Standard
Discuss about how JSF fits in MVC
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/jsf_scheme.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
JSF components
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:jsf_components"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Primefaces
\end_layout

\begin_layout Subsection
Object Model
\end_layout

\begin_layout Subsubsection
Components Design
\end_layout

\begin_layout Subsubsection
Patterns used 
\end_layout

\begin_layout Standard
Factory Pattern to create tool structures from the App Managed Bean.
\end_layout

\begin_layout Standard
Prototype Pattern to preload tools from the App Managed Bean.
\end_layout

\begin_layout Standard
Composite Pattern for CompositeStep
\end_layout

\begin_layout Subsection
Data Model
\end_layout

\begin_layout Section
Development
\end_layout

\begin_layout Standard
Hereafter and for the purpose of explaining the process followed in the
 development, an overview of the main issues related to each sprint has
 been written.
\end_layout

\begin_layout Subsection
First Sprint
\end_layout

\begin_layout Standard
A basic web tool (portlet) to navigate through the RAM Steps and capable
 of save the current state of each assessment was created in this step following
 the cascade development cycle (
\noun on
Design -> Development -> Testing
\noun default
).
 The portlet was called 
\family typewriter
ram-webtool
\family default
.
\end_layout

\begin_layout Subsubsection
Design
\end_layout

\begin_layout Standard
A first design was drafted to make implementation easier so the JSF architecture
 was kept in mind when coding.
 As discussed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:JSF"

\end_inset

 we will focus in Model and View parts of a MVC ar chitecture since the
 Controller is provided by the framework as the 
\family typewriter
Faces Servlet
\family default
.
\end_layout

\begin_layout Standard
The 
\emph on
Model 
\emph default
has two different parts due to the architecture provided by Liferay and
 JSF
\emph on
.
 
\emph default
On the one hand the model object provided by the 
\emph on
Liferay Service Builder
\emph default
 which representes the persistence layer.
 As discussed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Liferay"

\end_inset

, 
\emph on
Liferay
\emph default
 provides a service to create the persistence layer, so it was used to create
 the object 
\family typewriter
Assessment 
\family default
which stores the current step of each created assessment, considering that
 this current steps does not depend on the session but is a value that must
 be saved in the system.
\end_layout

\begin_layout Standard
On the one hand, two beans were necessary in this sprint as part of the
 model:
\end_layout

\begin_layout Itemize
A 
\emph on
session scoped
\emph default
 bean to keep all the session information, which is needed to know where
 the user is, what is he doing, what are the next allowed actions, etc.
\end_layout

\begin_layout Itemize
A
\emph on
 request scoped
\emph default
 bean which will be responsible of bringing the needed information and which
 actually works as a bridge between the persistent object and the view.
\end_layout

\begin_layout Standard
Regarding to the view, namely the 
\emph on
JSF UI components
\emph default
 according to 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:JSF"

\end_inset

, it consists of two main JSF pages with several components:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
mainView.xhtml
\family default
 Which provides the interface to create new assessments and includes the
 
\family typewriter
assessmentsList.xhtml
\family default
 component, in charge of showing the existing assessments list.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
assessmentView.xhtml
\family default
 Which depending on what the user is doing will show the 
\family typewriter
editAssessmentForm.xhtml
\family default
 component, if user is editing the assessment, or a 
\family typewriter
ramStepX.xhtml
\family default
 component, if user is consulting the assessment.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/First Sprint Class Diagram.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the first sprint
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sprint1_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
As explained above, for the persistence layer it was used the Liferay Service
 Builder, which helps developers to code simple persistence objects which
 will work with the system relational database.
 After implementing the persistence layer, the 
\family typewriter
mainView.xhtml
\family default
 was developed.
 This allowed the developer to draft the methods which would be needed from
 the beans.
 Lastly, the two beans were coded implementing the needed methods and inheriting
 their common characteristics from a common parent 
\family typewriter
AbstractBean
\family default
.
\end_layout

\begin_layout Subsubsection
Testing
\end_layout

\begin_layout Standard
Testing in this sprint was merely human guided since the testing framework
 had not yet been developed.
\end_layout

\begin_layout Subsection
Second Sprint
\end_layout

\begin_layout Standard
In order to implement in the future the flow chart tools within the RAM,
 a flow chart system should be developed.
 The flowchart library search didn't give results so a generic library util
 was developed.
\end_layout

\begin_layout Subsubsection
Design
\end_layout

\begin_layout Standard
For the purpose explained above, four main classes were necessary, but in
 order to extend the library for future uses, a fifth class was created
 for non-strict flows:
\end_layout

\begin_layout Description

\family typewriter
BasicNode<T,C>
\family default
 This class is the core of the library and represents a node of the flowchart
 which is composed by a content of type 
\family typewriter
T
\family default
 and an indefined number of edges of type 
\family typewriter
C
\family default
, which in turn inherits from 
\family typewriter
Comparable
\family default
 in order to allow a flow choose among all the edges the correct one.
 This class also implements not only methods to create and destroy nodes,
 but also to find the next node in a flowchart for a given condition.
\end_layout

\begin_layout Description

\family typewriter
BasicFlowChart<T,C>
\family default
 Composed by BasicNodes implements the methods to create, edit and destroy
 a flowchart as well as the methods to navigate through the flowchart.
\end_layout

\begin_layout Description

\family typewriter
Edge<T,C>
\family default
 This is just a very simple auxiliar class only used to make easier the
 construction of 
\family typewriter
BasicFlowChart
\family default
.
\end_layout

\begin_layout Description

\family typewriter
Flow<T,C>
\family default
 This class represents a particular flow and the flow status, that is to
 say the current node of the flow.
\end_layout

\begin_layout Description

\family typewriter
PermissiveFlow<T,C>
\family default
 As explained befor, this class has been created just to implement non-restricti
ve flows.
 In other words, flows allowing inputs not matching any of the conditions
 of the edges of the current node, in this case the flow will remain in
 the current node.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/flowcharts Class Diagram.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the second sprint, the flowchart util library
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sprint2_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The classes were implemented in ascending order of complexity, this means
 beginning with 
\family typewriter
BasicNode
\family default
, followed by 
\family typewriter
BasicFlowChart
\family default
 and 
\family typewriter
Edge
\family default
, and finally 
\family typewriter
Flow
\family default
 and 
\family typewriter
PermissiveFlow
\family default
.
 
\end_layout

\begin_layout Subsubsection
Testing
\end_layout

\begin_layout Standard
Unit tests were developed using JUnit, as showed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint2_tests"

\end_inset

, there are three suites of tests for this sprint:
\end_layout

\begin_layout Description
BasicNodeTests Related to the 
\family typewriter
BasicNode<T,C>
\family default
 class, it comprises 10 tests.
\end_layout

\begin_layout Description
BasicFlowChartTests Related to the 
\family typewriter
BasicFlowChart<T,C>
\family default
 class, which includes 
\family typewriter
Edge<T,C>
\family default
, it comprises 25 tests.
\end_layout

\begin_layout Description
FlowTests Related to 
\family typewriter
Flow<T,C>
\family default
 and 
\family typewriter
PermissiveFlow<T,C>
\family default
 classes, it comprises 5 tests.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/flowchart_tests.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Allure screenshot with tests passed for sprint 2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint2_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Being unit tests, a little time is required to pass each test as it can
 be checked in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint2_tests_duration"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/flowchart_tests_duration.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Time graphic for tests of sprint 2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint2_tests_duration"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Third Sprint
\end_layout

\begin_layout Standard
After some interviews with the client it was concluded that the development
 is quite limited and poorly flexible since it will just fit the current
 RAM tool requisites and it would be pretty complex to extend it.
 Finally it was decided to change the requisites and develop a web tool
 flexible enough to implement different kind of methodologies or tools.
 That is how the project has become a tool builder, and so is called Toolbuilder
, and the new portlet which implements the tools is called 
\family typewriter
tool-implementation
\family default
.
\end_layout

\begin_layout Subsubsection
Design
\end_layout

\begin_layout Standard
Although the 
\emph on
beans
\emph default
 and the 
\emph on
JSF views
\emph default
 remained the same, some generalization were done in the model to conform
 to the new requirements.
 The former 
\family typewriter
Assessment
\family default
 class is going to be replaced by a more complex structure:
\end_layout

\begin_layout Itemize
Firstly, as there must be several kind of steps depending on the specifications
 of the tool to be created, two type of steps (classes) were created in
 this sprint which inherit from the class 
\family typewriter
Step
\family default
:
\end_layout

\begin_deeper
\begin_layout Description

\family typewriter
VoidStep
\family default
 Just a type of step for developing purposes without content and/or configuratio
n.
\end_layout

\begin_layout Description

\family typewriter
CompositeStep
\family default
 This is a step which contains other steps so an structure step/substep
 can be implemented following a 
\emph on
Composite Pattern
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "ErichGamma1994"

\end_inset

.
 As it should store information about the substeps it contains, it is persistent
, therefore it was created with 
\emph on
Liferay Service Builder
\emph default
.
\end_layout

\end_deeper
\begin_layout Itemize
Moreover, an object called 
\family typewriter
\series bold
StepFactory
\family default
\series default
 is in charge of the creation of the different steps following a 
\emph on
Factory Pattern
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "ErichGamma1994"

\end_inset

.
\end_layout

\begin_layout Itemize
Lastly, a new object called 
\family typewriter
\series bold
ToolInstance
\family default
\series default
 fundamentally performs the function of the former 
\family typewriter
Assessment
\family default
 object storing all the information related to the each assessment, hereafter
 called 
\emph on
tool instance
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/Third Sprint Class Diagram.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the third sprint
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint3_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
After replacing 
\family typewriter
Assessment
\family default
 class by 
\family typewriter
ToolInstance
\family default
, the first step was to create the 
\family typewriter
Step
\family default
 class, which would be the parent of all kind of steps.
 Later a new 
\emph on
Service Builder
\emph default
 entity was created for the new 
\family typewriter
CompositeStep
\family default
 class, followed by the simple 
\family typewriter
VoidStep
\family default
 class which mocks any kind of step.
 Finally, the 
\family typewriter
StepFactory
\family default
 class was implemented to create steps.
\end_layout

\begin_layout Subsubsection
Testing
\end_layout

\begin_layout Standard
In this sprint the testing framework was implemented and the Behavior Driven
 Development (BDD) was set up for next Sprints.
 Tests scenarios were developed for the three existing features:
\end_layout

\begin_layout Enumerate
Tool Instance Creation
\end_layout

\begin_layout Enumerate
Navigate through steps
\end_layout

\begin_layout Enumerate
Tool Instance Deletion
\end_layout

\begin_layout Standard
For each feature, the different scenarios or user stories (in compliance
 with the BDD methodology) were created.
 The development of the tests also required some debugging, as it is shown
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint3_tests_fail"

\end_inset

 the first time tests were executed there were some defects.
 After debugging it was checked that defects were caused by bugs in the
 tests, particularly by the way 
\emph on
Selenium WebElement
\emph default
s were selected because the 
\emph on
xpath
\emph default
 did not match with the web elements outputted by the portlet.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint3_tests_fail.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 3 tests failed at the beginning and required debugging
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint3_tests_fail"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint3_tests_pass"

\end_inset

 is shown the tests result after debugging.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint3_tests_pass.png
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 3 tests passed successfully after debugging
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint3_tests_pass"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Fourth Sprint
\end_layout

\begin_layout Standard
As tools should be able to be customized and many occurrences of each tool
 may be created, it becomes necessary to make code refactoring in order
 to divide the two parts: 
\emph on
Tool Definitions
\emph default
 and 
\emph on
Tool Instances
\emph default
.
 So after refactoring we have separately the objects related to the tool
 structure -hereafter 
\emph on
Tool Definition
\emph default
- and the objects related to the tool occurrences -hereafter 
\emph on
Tool Instances
\emph default
.
\end_layout

\begin_layout Subsubsection
Redesign / Refactoring
\end_layout

\begin_layout Standard
Tool definitions are separated from tool instances creating two different
 classes (
\family typewriter
ToolDef
\family default
 and 
\family typewriter
ToolInstance
\family default
), likewise steps definitions should be separated from step implementations,
 for that purpose abstract classes 
\family typewriter
StepDef
\family default
 and 
\family typewriter
Step
\family default
 were created to steps inheriting them, the first one representing the step
 definition and the second one representing the step within the 
\emph on
tool instance
\emph default
, that is to say the step occurrence.
\end_layout

\begin_layout Standard
As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint4_design"

\end_inset

, a simetric design has been implemented which will be replicated for each
 step:
\end_layout

\begin_layout Itemize
In blue the definition part, with 
\family typewriter
StepDef
\family default
, 
\family typewriter
CompositeStepDef
\family default
 and 
\family typewriter
ToolDef
\family default
 classes.
 All them related to the 
\emph on
tool definitions
\emph default
 which will define the structure and configuration of each tools and each
 step.
\end_layout

\begin_layout Itemize
In red the instances part, with 
\family typewriter
Step
\family default
, 
\family typewriter
CompositeStep
\family default
 and 
\family typewriter
ToolInstance
\family default
 classes.
 These classes represent to the status of each tool instance.
 Namely the current step for each tool instance, the status of each step
 and all the related information.
\end_layout

\begin_layout Standard
As we can see in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint4_design"

\end_inset

, 
\emph on
Factory
\emph default
 and 
\emph on
Composite Patterns
\emph default
 are still being used after refactoring.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/StepFactory Class Diagram.png
	scale 80
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the fourth sprint
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint4_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the same way, database needed to be redesigned in order to match with
 the new classes design.
 As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint4_db"

\end_inset

 there is also a symmetry between the definition part, on top, and the instances
 part.
 Each 
\emph on
Tool
\emph default
 (both definition and instance) contains a 
\emph on
Composite Step
\emph default
, which as a relationship 1 to 1 with the 
\emph on
Step
\emph default
 table (as class 
\family typewriter
CompositeStep
\family default
 inherits from 
\family typewriter
Step
\family default
) but also a relationship N to N because one 
\emph on
composite step
\emph default
 contains several 
\emph on
steps
\emph default
 and one 
\emph on
step
\emph default
 can be in several 
\emph on
composite step
\emph default
s.
 Although there is data redundancy in the N to N relationships -which in
 fact can be simplified removing the relationship between tables 
\emph on
CompositeStepDBE
\emph default
 and 
\emph on
StepDBE
\emph default
- at this sprint it was felt useful to make easier the development of the
 associated classes.
\end_layout

\begin_layout Standard
Finally, a new 
\emph on
managed bean application scoped
\emph default
 was created called 
\family typewriter
FactoryBean
\family default
.
 This bean manages and stores the different type of steps and existing tool
 definitions and it also stores the tool definition which is in use.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/database/ERD_S4.png
	width 14cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Database design for the fourth sprint
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint4_db"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Test design
\end_layout

\begin_layout Standard
Tests remained the same since no new user functionalities will be implemented.
 Anyhow, the test were passed to guarantee refactoring has been successful
 and accomplishes all the required features.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The only aspect to note during implementation was the difficulty of working
 with 
\emph on
Liferay Service Builder
\emph default
 and its way of supporting N to N relationships.
 After exploring how to do it the
\emph on
 
\emph default
persistent objects were created, the 
\emph on
Liferay Service Builder
\emph default
 allows to create N to N relationships but, as it would be realized later
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Tenth-Sprint"

\end_inset

, it is not the best option.
\end_layout

\begin_layout Subsection
Fifth Sprint
\end_layout

\begin_layout Standard
Due to the breakup between 
\emph on
tool definition
\emph default
 and 
\emph on
tool instance
\emph default
 it is needful to define permissions to access both areas.
 Thus, the definition should be used by tool administrators, while the instances
 should be available to logged users, but non logged users will be able
 to see tools instances not having permissions to use them.
 Therefore, the permission scheme should be defined to provide limited access
 based on user role following the scheme in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "table:sprint5_permissions"

\end_inset

.
 In addition to the 
\family typewriter
tool-implementation
\family default
 portlet, who is in charge of the tool instances, a new portlet called 
\family typewriter
tool-definition
\family default
 has been added to manage the tool definitions, it will be created in the
 next sprint.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="2.2cm">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Portlet Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Permission
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Anonymous user
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Logged user
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
tool-implementation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Create Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use/Edit Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Delete Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
View Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
tool-definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
ChooseTool Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Create Tool Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Delete Tool Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Permissions scheme for Sprint 5
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "table:sprint5_permissions"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Test design
\end_layout

\begin_layout Standard
The functional tests were modified to include permissions restrictions,
 so a step for log in the user was added to each existing scenario -as shown
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint5_tests"

\end_inset

 which in the step 2 logs the users.
 Also 3 more scenarios were added to test the restrictions for non logged
 users, one for each feature.
 No tests have been added for the 
\family typewriter
tool-definition
\family default
 portlet as it will be implementend in the next step.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint5_tests_pass.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 5 tests passed successfully
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint5_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
To code the permission restrictions, the Liferay permissions scheme has
 been used.
 It allows to define permissions for the portlets and the model based on
 the user's role through a xml file.
 As shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:sprint5_perm"

\end_inset

, three permissions have been configured: add, delete and edit; those three
 permissions are allowed to any site member but restricted to guests, namely
 anonymous users.
 As can be noted only permissions for the 
\family typewriter
tool-implementation
\family default
 portlet were defined in this sprint, since 
\family typewriter
tool-definition
\family default
 portlet implementation will be addressed in the next sprint.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,float,basicstyle={\small\ttfamily},tabsize=3,keywordstyle={\color{blue}},morekeywords={resource-action-mapping,portlet-resource,portlet-name,permissions,supports,action-key,site-member-defaults,guest-defaults,guest-unsupported,model-resource,model-name,portlet-ref},alsoletter={-}"
inline false
status open

\begin_layout Plain Layout

<resource-action-mapping>
\end_layout

\begin_layout Plain Layout

	<model-resource>
\end_layout

\begin_layout Plain Layout

		<model-name>org.lrc.liferay.toolbuilder.model</model-name>
\end_layout

\begin_layout Plain Layout

		<portlet-ref>
\end_layout

\begin_layout Plain Layout

			<portlet-name>tool-implementation</portlet-name>
\end_layout

\begin_layout Plain Layout

		</portlet-ref>
\end_layout

\begin_layout Plain Layout

		<permissions>
\end_layout

\begin_layout Plain Layout

			<supports>
\end_layout

\begin_layout Plain Layout

				<action-key>ADD_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>DEL_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>EDIT_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

			</supports>
\end_layout

\begin_layout Plain Layout

			<site-member-defaults>
\end_layout

\begin_layout Plain Layout

				<action-key>ADD_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>DEL_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>EDIT_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

			</site-member-defaults>
\end_layout

\begin_layout Plain Layout

			<guest-defaults />
\end_layout

\begin_layout Plain Layout

			<guest-unsupported>
\end_layout

\begin_layout Plain Layout

				<action-key>ADD_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>DEL_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>EDIT_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

			</guest-unsupported>
\end_layout

\begin_layout Plain Layout

		</permissions>
\end_layout

\begin_layout Plain Layout

	</model-resource>
\end_layout

\begin_layout Plain Layout

</resource-action-mapping>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:sprint5_perm"

\end_inset

Permissions configuration file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Sixth Sprint
\end_layout

\begin_layout Standard
Once the backend for tool definition was developed it was necessary to create
 the interface so admin users can choose between the existing tool definitions,
 therefore in this sprint the portlet 
\family typewriter
tool-definition
\family default
 was created.
\end_layout

\begin_layout Subsubsection
Test design
\end_layout

\begin_layout Standard
Following BDD methodology, behavoir of the system for this new feature was
 defined by developing some four scenarios.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sprint6_tests"

\end_inset

 these tests, passed after the implementation, are shown.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
First The admin user chooses an existing Tool Definition different to the
 chosen one.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Second The admin user chooses another existing Tool Definition, which in
 fact means choosing back the last Tool Definition.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Third Access to tool-definition portlet forbidden for a logged user who
 is not admin.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Fourth Access to tool-definition portlet forbidden for an anonymous user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint6_tests_pass.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 6 tests passed successfully
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint6_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The new portlet called 
\family typewriter
tool-definition
\family default
 was created only accessible for admin users and available through the 
\emph on
Site Administration -> Content
\emph default
 section, so the 
\family typewriter
control-panel-entry-category
\family default
 parameter was defined as 
\family typewriter
site_administration.content
\family default
.
 Thus, the permission scheme from 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:sprint5_perm"

\end_inset

 was implemented because that section is only accessible for admin users.
\end_layout

\begin_layout Standard
As the current tool definition is stored in the 
\emph on
application scoped bean
\emph default
 
\family typewriter
FactoryBean
\family default
, only the view 
\family typewriter
adminView.xhtml
\family default
 needed to be developed in this sprint.
 Some troubles were founded in order to refresh the page when a tool definition
 was choosen but, finally it was decided only to render again the form the
 button was embedded in, though an ajax call.
\end_layout

\begin_layout Subsection
Seventh Sprint
\end_layout

\begin_layout Standard
A use case to create a new tool definition is defined as the first step
 to configure that new tool definition which will be able to be selected
 in the 
\family typewriter
adminView.xhtml
\family default
 and used by logged users.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests have been created for this use case.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
In order to have different code instances for tool choosing and tool definition
 a new 
\family typewriter
toolDefConfig.xhtml
\family default
 file is created which will be called to configure the tool definitions.
 The name of the tool to work with will be passed as part of the URL (using
 
\family typewriter
GET
\family default
 method) so the page can be addressed straight away by any admin user.
\end_layout

\begin_layout Standard
In addition, a way to show different step definitions should be defined,
 so a tabs view was used because of the familiarity of users with this kind
 of interface and the easiness of development provided by the Primefaces
 
\family typewriter
tabView
\family default
 resource.
\end_layout

\begin_layout Standard
Beans development.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
¿que diagrama UML?
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename /home/ferda/informatica/development/lib/liferay/liferay-plugins-sdk-6.2/portlets/toolBuilder-portlet/doc/uml/exported/Portlets Component Diagram.png

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eighth Sprint
\end_layout

\begin_layout Standard
An interface to add steps to the tool definition should be created.
 It should be embedded in the 
\family typewriter
toolDefConfig.xhtml
\family default
 interface, but been independent because it will be called not only from
 there to add steps to the main tool definition, but also to add steps to
 any of the nested composite steps.
\end_layout

\begin_layout Standard
Add step use case diagram
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests have been created for this use case.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The 
\emph on
Primefaces Dialog Framework
\emph default
 has been used to have the page to choose among different installed steps
 separately.
 Thus, the choice of the new step type is done in a new dialog which will
 return it (the step type) and will pass it to 
\family typewriter
toolDefConfig.xhtml
\family default
 via 
\family typewriter
POST
\family default
 method.
\end_layout

\begin_layout Standard
Capture of dialog
\end_layout

\begin_layout Subsection
Ninth Sprint
\end_layout

\begin_layout Standard
Delete step use case diagram
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests have been created for this use case.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
Coding this use case was not a hard task since the Primefaces 
\family typewriter
<p:tab />
\family default
 tag has a property called 
\family typewriter
closable
\family default
 which allows to close each tab by a button in the top-right corner, so
 it is also user-friendly.
 When closing, an ajax call is done if defined for the 
\family typewriter
tabClose
\family default
 event.
\end_layout

\begin_layout Subsection
Tenth Sprint
\begin_inset CommandInset label
LatexCommand label
name "subsec:Tenth-Sprint"

\end_inset


\end_layout

\begin_layout Standard
At this point, and due to an interview with the client, it was realized
 that steps order could be modified in tool definition configuration.
 Up to this moment, steps were added in consecutive order, from first to
 last,so if users wanted to modify the order the only way was deleting existing
 steps and creating them again.
 To fix this the model and hence the database should be modified.
\end_layout

\begin_layout Standard
Database relationships diagram with steps order included.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests for this sprint are just unit tests which verify the insertion of
 the steps relationships in the database.
 TODO
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
Talk about how I stop using service builder n to n relationships and create
 a new table to store the relationship and the order.
\end_layout

\begin_layout Standard
Talk about how add, remove methods have been modified and moveStep created
\end_layout

\begin_layout Standard
Refactoring
\end_layout

\begin_layout Subsection
Eleventh Sprint
\end_layout

\begin_layout Standard
Once the backend supports steps order it is time to modify the interface
 so admin users can change the order of the steps in a tool definition.
 It involved looking the possibilities of doing it in a user-friendly drag-and-d
rop way with the current tabs view.
 Given the impossibility of doing that with the existing Primefaces 
\family typewriter
<p:tab />
\family default
 tag the whole steps interface was redesigned.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests for this sprint are those to move the steps but with regression tests
 from eighth sprint in order to assure the proper functioning of the redesigned
 interface.
 Difficult to drag and drop thorough Selenium so Java Robot should be used.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
which means launch a dialog and drag-and-drop the Create interface to modify
 steps order in tool definitions.
 Due to the main
\end_layout

\begin_layout Subsection
Twelfth Sprint
\end_layout

\begin_layout Standard
After interview with the client she realized that it was not possible to
 delete Tool Definitions, so this feature should be added.
 Also it was necesary to avoid the user to delete or edit tool definitions
 which are selected or which have already created tool instances.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Behavoir were designed for both features:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Deleting A delete button exists for each tool definition so when the user
 clicks on it a dialog to confirm will appear and if it is confirmed the
 tool definition will disappear from the view.
 
\begin_inset Marginal
status open

\begin_layout Plain Layout
How I test the toolDef is deleted in the database?
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Restricting When a tool definition is selected or it has created tool instance
 it will be impossible to delete or edit it.
 So buttons should be disabled and a tooltip will showed when moving the
 mouse over them.
 Four scenarios has been created for this feature: three for the cases of
 not allowing edit or deletion and one where the system must allows it.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
Delete button.
 Tooltip from Primefaces not working related to commandButton, so it was
 linked to a new div which contains all the buttons.
\end_layout

\begin_layout Subsection
Thirteenth Sprint
\end_layout

\begin_layout Standard
Create interface to modify Composite Step Type
\end_layout

\begin_layout Subsection
Fourteenth Sprint
\end_layout

\begin_layout Standard
Create Web Content Step Type and show the step
\end_layout

\begin_layout Subsection
Fifteenth Sprint
\end_layout

\begin_layout Standard
Create Web Content Step Type configuration interface
\end_layout

\begin_layout Subsection
Sixteenth Sprint
\end_layout

\begin_layout Standard
Create Basic RAM Tool
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Usability and modificabilidad/extensibilidad
\end_layout

\begin_layout Section
Discussion
\end_layout

\begin_layout Standard
2 Párrafos, destilado de los resultados
\end_layout

\begin_layout Standard
For the future: Performance testing
\end_layout

\begin_layout Section
Appendices
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "pfc_bibliography"
options "plain"

\end_inset


\end_layout

\end_body
\end_document

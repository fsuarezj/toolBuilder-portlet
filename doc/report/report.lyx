#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{pdflscape}
\usepackage{fmtcount}
\usepackage[super]{nth}
\definecolor{green}{RGB}{0,120,0}
\definecolor{grey}{RGB}{240,240,240}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\rightmargin 2.2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract
Blablabla
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
Objectives
\end_layout

\begin_layout Standard
Develop a web tool to help practitioners to carry out Rapid Assessment for
 Markets.
 The project tackles the problem of accessing the methodology and following
 it step by step.
 The real power of the tool lies on the possibility of following the methodology
 interactively and improve the web tool in the future to allow users input
 the data and analyze it within the tool.
\end_layout

\begin_layout Section
Development Methodology
\end_layout

\begin_layout Standard
The software development has intended to use the software engineering techniques
 and methodologies currently used in software business.
 As it will be shown, some of the techniques has been adopted during the
 course of the project in an effort to improve the software development
 methodology and hence software quality.
\end_layout

\begin_layout Standard
Agile Software Development has been practiced since it, as stated in the
 
\emph on
Agile Manifesto
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "AgileManifesto"

\end_inset

, come to value some items over other ones, which has been regarded a good
 practice for this project:
\end_layout

\begin_layout Itemize

\series bold
Individuals and interactions over processes and tools:
\series default
 The fact of using methodologies oriented to individuals and interactions
 means that agile ones are less prescriptive than traditional methods, so
 it will not only facilitate the comprehension of the process by the non-technic
al stakeholders -in this case the customer-, but also will be more adaptative
 allowing to better fit the methodology to the project and team needs.
\end_layout

\begin_layout Itemize

\series bold
Working software over comprehensive documentation:
\series default
 Inasmuch as the objective of the project is to do a web tool to guide through
 Rapid Assessment for Markets, the documentation is not a main objective
 and the efforts will be aimed mostly to make a working web tool.
 In despite of this and in order to make a properly documented Final Project,
 all the development phases and sprints will be well documented.
\end_layout

\begin_layout Itemize

\series bold
Customer collaboration over contract negotiation:
\series default
 Since there is not a contractual relationship with the customer and the
 requirements are not quite clear, the involvement of the customer will
 be important during the project for the purpose of assuring the software
 accomplishes the goals.
\end_layout

\begin_layout Itemize

\series bold
Responding to change over following a plan: 
\series default
In the same vein, as the requirements and the software design were a little
 ambiguous on the customer side, changes on the fly might be done, so flexible
 methodologies were required.
\end_layout

\begin_layout Subsection
Implementing agile methodologies
\end_layout

\begin_layout Standard
For the purpose of the project it has been founded more useful to combine
 techniques from agile (mainly Scrum
\begin_inset CommandInset citation
LatexCommand cite
key "Schwaber95scrumdevelopment,ScrumGuide"

\end_inset

) and Lean
\begin_inset CommandInset citation
LatexCommand cite
key "Poppendieck2003"

\end_inset

 methodologies, rather than following just one strictly.
 Therefore, the combination of several techniques allows to take the best
 of each one -as shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "AndrewThuPham2012"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "HenrikKniberg2010"

\end_inset

- and it also allows the development methodology to be adapted to the current
 project specifications and to evolve according to the project momentum.
\end_layout

\begin_layout Standard
To begin with, and in order to structure the development process, the developmen
t has been structured in 
\emph on
sprints
\emph default
 following the Scrum framework.
 In this way, the development is incremental and it allows to better being
 structured and documented.
 The process of each sprint is documented in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Development"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Kanban board with Taiga/Trello
\end_layout

\begin_layout Standard
In order to organize and visualize the different tasks and the work-flow
 a 
\emph on
Kanban board
\emph default
[XX] has been created.
 After some researching Taiga
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.taiga.io
\end_layout

\end_inset

 platform was chosen since it allows to combine a Kanban board with backlog
 and time-line tools.
 Later, during the development it was migrated to Trello
\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.trello.com
\end_layout

\end_inset

 platform, a capture is shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:trello_board"

\end_inset

, because of its integration with the time management technique 
\emph on
Pomodoro
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "Cirillo2009"

\end_inset

, which was introduced lately to improve productivity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/trello_board.png
	width 12cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Kanban board powered by Trello
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:trello_board"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Branching and version control
\end_layout

\begin_layout Standard
Branching is 
\emph on

\begin_inset Quotes eld
\end_inset

the duplication of an object under revision control (such as a source code
 file or a directory tree) so that modifications can happen in parallel
 along both branches
\begin_inset Quotes erd
\end_inset


\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "BranchingWikipedia"

\end_inset

 and is closely linked to version control as the branching strategy defines
 the versions structure.
 For the current project, the branching strategy has not been too complex
 since branches has only been created to add new features keeping the working
 code untouched.
 In fact, in the most of the cases a new branch has been created for each
 sprint and, at the end of the sprint has been merged to the master branch.
\end_layout

\begin_layout Subsubsection
Git
\end_layout

\begin_layout Standard
To deal with branches and version control Git
\begin_inset Foot
status open

\begin_layout Plain Layout
https://git-scm.com/
\end_layout

\end_inset

 has been chosen as the best option mainly because of its flexibility to
 local and remote branching and merging cheaply, in addition to the free
 and quality service provided by GitHub
\begin_inset Foot
status open

\begin_layout Plain Layout
https://github.com/
\end_layout

\end_inset

, which helps developers to have distributed git repositories easily.
\end_layout

\begin_layout Subsection
Behavior Driven Development
\begin_inset CommandInset label
LatexCommand label
name "subsec:Behavior-Driven-Development"

\end_inset


\end_layout

\begin_layout Standard
Behavior Driven Development
\begin_inset CommandInset citation
LatexCommand cite
key "BDDWiki"

\end_inset

 (BDD) is a development technique built upon Test Driven Development (TDD)
 and Acceptance Test Driven Development (ATDD) and first described by Dan
 North in 2006
\begin_inset CommandInset citation
LatexCommand cite
key "IntroBDD"

\end_inset

.
 Is has been adopted for the current project after the third sprint.
 To better understand BDD it is necessary understanding what TDD and ATDD
 are:
\end_layout

\begin_layout Itemize

\series bold
TDD
\series default
 is a software development process which helps creating well-written and
 working code.
 According to 
\begin_inset CommandInset citation
LatexCommand cite
key "Koskel2007"

\end_inset


\emph on
 TDD cycle is a three-step process of writing a test, making it pass by
 writing just enough production code, and finally improving the design by
 disciplined refactorings
\emph default
, so the three steps are testing, coding and refactoring.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:TDD_cycle"

\end_inset

 the cycle flowchart is shown.
\end_layout

\begin_layout Itemize

\series bold
ATDD
\series default
 is a process based in TDD but including the concept of acceptance tests
 and highlighting the customer-tester-developer collaboration
\begin_inset CommandInset citation
LatexCommand cite
key "Pugh2011"

\end_inset

.
 Acceptance tests are related to the specifications and check if they are
 met, so ATDD process is similar to TDD but working the acceptance tests
 which in fact means improving the collaboration among customer, tester
 and developer since customer must be involved in acceptance tests definition.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/tdd_cycle.png
	width 14cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
TDD cycle, from 
\begin_inset CommandInset citation
LatexCommand cite
key "TDDWikipedia"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:TDD_cycle"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the other hand, BDD introduces the concept of 
\emph on
behavior
\emph default
 which is a description of what the system 
\emph on
should do
\emph default
 using consistent vocabulary, so the traditional disconnect between business
 and technology disappears
\begin_inset CommandInset citation
LatexCommand cite
key "BDDWiki"

\end_inset

.
 This increases the involvement of customer in the development, so for this
 project enhances the opportunity of involvement of future users, who could
 not have a technical background.
 Thus, talking about behaviors instead of tests and writing them in a natural
 language so anyone on the team can read it, improves the communication
 and the understanding among all the stakeholders.
\end_layout

\begin_layout Subsection
Documentation
\end_layout

\begin_layout Standard
One of the advantages of BDD is that tests not only check the software,
 but also document it as they are descriptions of the software behavior.
 This is very useful because all the documentation related to the software
 behavior is already written.
\end_layout

\begin_layout Standard
Regardless of that, the code should be documented in order to make easier
 the involvement of new developers in the future, so Javadoc
\begin_inset CommandInset citation
LatexCommand cite
key "Javadoc"

\end_inset

 has been used.
 Javadoc is a tool for generating code documentation by adding Java annotation
 to the code.
 All objects and methods in the code has been annotated so code will be
 more understandable.
\begin_inset Marginal
status open

\begin_layout Plain Layout
Finish documenting code
\end_layout

\end_inset


\end_layout

\begin_layout Section
Testing Framework
\end_layout

\begin_layout Standard
As it will be explained in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Development"

\end_inset

, the testing framework was not implemented in the first sprint.
 For the second sprint just unit tests were taken, while the rest of the
 tests were taken from third sprint on.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:agile_testing_quadrants"

\end_inset

 the 
\emph on
Agile Testing Quadrants
\emph default
 from 
\begin_inset CommandInset citation
LatexCommand cite
key "LisaCrispin2009"

\end_inset

 are shown.
 These quadrants help to understand the different test phases and what has
 been the testing strategy during the project.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/agile_testing_quadrants.png
	width 12cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Agile Testing Quadrants
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:agile_testing_quadrants"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Quadrant 1 tests
\end_layout

\begin_layout Standard
Tests in Quadrant 1 are usually taken by the developers and are aimed to
 ensure the quality of small parts of the software as well as their interactions
 with other parts.
 Within the project unit tests has been automatized for some components
 as in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Second-Sprint"

\end_inset

, but in many cases and due to the integration of the project in Liferay
 which will be discussed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Liferay"

\end_inset

, unit tests were barely taken manually during development and the effort
 has been made in the automation of next quadrants tests, which allow to
 test the correct behavior of small parts in an easier way when they are
 integred with the whole system.
\end_layout

\begin_layout Standard
Regarding the used technologies, JUnit4
\begin_inset Foot
status open

\begin_layout Plain Layout
http://junit.org/junit4/
\end_layout

\end_inset

 has been the framework choosen for unit tests, as it has a good documentations
 and xUnit is one of the most popular testing frameworks.
 In the reporting side, Allure framework
\begin_inset Foot
status open

\begin_layout Plain Layout
http://allure.qatools.ru/
\end_layout

\end_inset

 has been used because of the good integration with JUnit and the quality
 and customization of the reports.
\end_layout

\begin_layout Subsection
Quadrant 2 tests
\end_layout

\begin_layout Standard
Quadrant 2 comprises the Business-Facing tests which address requirements
 of the software.
 It includes all the user stories and features desired and should also check
 for undesired behavior in specific cases.
 Thus, the BDD tests are included in this quadrant.
 It is important to understand that even if BDD are acceptance tests, they
 are different to User Acceptance Tests, which will be explained in the
 next quadrant.
\end_layout

\begin_layout Standard
For this project, the most of the testing efforts has been made in this
 quadrant as BDD has been the main testing methodology.
 The nature of the webapp, which is embedded in Liferay and uses mature
 technologies such as Java Server Faces as explained below, implies that
 the best way to test the software is when it is already embeded and working
 since the surrounding technologies are not supposed to fail.
 In this way, the testing efforts are optimized and the quality of the software
 is ensured.
\end_layout

\begin_layout Standard
In order to implement BDD and carry out the tests, two main technologies
 have been employed in addition to the reporting 
\emph on
Allure
\emph default
 framework: 
\emph on
Selenium
\emph default
 and 
\emph on
Cucumber-JVM
\emph default
.
\end_layout

\begin_layout Subsubsection
Selenium
\end_layout

\begin_layout Standard

\emph on
Selenium
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
http://www.seleniumhq.org/
\end_layout

\end_inset

 is a framework which automates browsers.
 In the current project, the 
\emph on
Selenium WebDriver
\emph default
 has been used because it allows to create and automate tests programmatically
 through several languages, in this case the Selenium Java binding has been
 the chosen one.
\end_layout

\begin_layout Standard
Although many browsers are supported by 
\emph on
Selenium
\emph default
, just Mozilla Firefox and Chrome have been used.
 In fact, although Firefox was used in several tests, Chrome has been the
 main testing browser since Firefox WebDriver had some issues depending
 on the Firefox version installed in the testing machine.
\end_layout

\begin_layout Standard
To improve tests development and scalability a little framework has been
 created to have separately the WebDriver and the pages handling, so two
 type of objects have been created:
\end_layout

\begin_layout Description

\family typewriter
DriverFactory
\family default
 This is a static object in charge of handling the WebDriver.
 This object creates and destroys the WebDriver and provides it when it
 is required.
\end_layout

\begin_layout Description

\family typewriter
XyzPage
\family default
 These objects which usually inherit from 
\family typewriter
AbstractPage
\family default
 and where Xyz is the identifier of each page, provide the methods to access
 and handle the different page components.
\end_layout

\begin_layout Subsubsection
Cucumber-JVM
\end_layout

\begin_layout Standard
Cucumber
\begin_inset Foot
status open

\begin_layout Plain Layout
https://cucumber.io/
\end_layout

\end_inset

 is one of the most known and used tools to automate tests in Behavior Driven
 Development, and Cucumber-JVM is its implementation for Java Virtual Machine
 languages.
\end_layout

\begin_layout Standard
As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:cucumber_stack"

\end_inset

, Cucumber has different levels which should be defined in order to get
 the BDD framework working.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cucumber_stack.png
	width 55mm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Cucumber testing stack, from 
\begin_inset CommandInset citation
LatexCommand cite
key "Rose2015"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:cucumber_stack"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Business-Facing
\end_layout

\begin_layout Standard
These levels are the core of the BDD methodology because it is where the
 software behaviors are defined.
 As stated in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Behavior-Driven-Development"

\end_inset

, behaviors are understood by customer, tester and developer so should be
 developed in close collaboration among all of them.
 Consequently, all these levels are written in a natural language so it
 can be understood by all the stakeholders, as explained below
\emph on
 Gherkin
\emph default
 language, the will be used to ensure that.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\emph on
Features:
\emph default
 Here is where features are defined.
 Many authors, as in 
\begin_inset CommandInset citation
LatexCommand cite
key "Pugh2011"

\end_inset

, define features as high level requirements composed by user stories, which
 are smaller parts usually defined in the way 
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily}"
inline false
status open

\begin_layout Plain Layout

As a <role>, I want to <do something> so that <reason>.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
But Cucumber does not has a 
\emph on
User Story
\emph default
 level, so it is a good practice to step down a level and define features
 as user stories naming firstly de feature and later using the 
\family typewriter
As a/I want to/so that
\family default
 notation.
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000

\emph on
Scenarios:
\emph default
 Scenarios are the next level and they are akin to use cases.
 Thus, they are composed by steps and define the behavior of the system
 in a given use case.
 To concretelly define the behavior, in Cucumber scenarios follow the structure
 
\family typewriter
Given <condition>, when <event/action> then <result>
\family default
 written in Gherkin language.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\emph on
Steps:
\emph default
 The last level of the Business-Facing section are steps.
 Steps are single actions that are concatenated in Cucumber so they say
 the system 
\emph on
what
\emph default
 to do.
 Each step has its step definition in the Technology-Facing section, so
 the natural language is translated into a testable language.
\end_layout

\begin_layout Standard
As stated above, the main technology to power this business-facing secion
 is the 
\emph on
Gherkin
\emph default
 language as it is the language used for writting Cucumber features, scenarios
 and steps.
 It is a natural language with a specific structure and a set of keywords
 to define features, scenarios and steps.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:Gherkin_example"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,keywordstyle={\color{green}},morekeywords={Feature,Scenario,Given,And,When,But,Then},backgroundcolor={\color{grey}}"
inline false
status open

\begin_layout Plain Layout

Feature: Tool Instance Creation
\end_layout

\begin_layout Plain Layout

	As a user
\end_layout

\begin_layout Plain Layout

	I want to be able to create a new Tool Instance in the system
\end_layout

\begin_layout Plain Layout

	So that I can work with that Tool Instance
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	Scenario: A logged user creates a new Tool Instance
\end_layout

\begin_layout Plain Layout

		Given the user is on the Tool Instances Navigation Page
\end_layout

\begin_layout Plain Layout

		And she logs in the system as xx@xx.com with password xxx
\end_layout

\begin_layout Plain Layout

		When she chooses to create a new tool instance
\end_layout

\begin_layout Plain Layout

		And she provides the tool instance name as My New Instance
\end_layout

\begin_layout Plain Layout

		And she creates the tool instance
\end_layout

\begin_layout Plain Layout

		And she returns to the Tool Instances Navigation Page
\end_layout

\begin_layout Plain Layout

		Then a tool instance called "My New Instance" exists
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout

\begin_inset CommandInset label
LatexCommand label
name "lis:Gherkin_example"

\end_inset

Example of feature with one scenario written in 
\emph on
Gherkin
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Technology-Facing
\end_layout

\begin_layout Standard
These levels are related to the system to be tested.
 In this project, as Cucumber-JVM has been chosen, the most of the code
 is written in Java, but that choice depends on the kind of software to
 be tested and the language chosen.
\end_layout

\begin_layout Itemize

\emph on
Step Definitions:
\emph default
 As explained above these are the translations of the steps into testable
 procedures, so they say the system 
\emph on
how
\emph default
 to carry out the steps.
 In this case, as we are using Cucumber-JVM, steps definition are implemented
 using Java annotations and allows to include regular expressions in order
 to better define the steps.
 An example can be shown in the first line of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:cucumber_step_def"

\end_inset

.
\end_layout

\begin_layout Itemize

\emph on
Support Code:
\emph default
 As steps should be concrete and accurate, the support code should not be
 so extense, just a few lines to link with the automation library, which
 will be the level which will really do the most of the automation work.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lis:cucumber_step_def"

\end_inset

 just to lines are enough to call the automation library and tell it what
 to do.
\begin_inset listings
lstparams "language=Java,basicstyle={\small\ttfamily},breaklines=true,showstringspaces=false,tabsize=3,keywordstyle={\color{green}},backgroundcolor={\color{grey}}"
inline false
status open

\begin_layout Plain Layout

@When("^(?:she|he|the user) logs in the system as ([^
\backslash
"]*) with password ([^
\backslash
"]*)$")
\end_layout

\begin_layout Plain Layout

public void logIn(String login, String passwd) {
\end_layout

\begin_layout Plain Layout

	new ToolInstanceCommonPage(driver).clickLogIn();
\end_layout

\begin_layout Plain Layout

	new ToolInstanceCommonPage(driver).fillLogin(login, passwd);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout

\begin_inset CommandInset label
LatexCommand label
name "lis:cucumber_step_def"

\end_inset

Example of step definition and support code
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\emph on
Automation Library: 
\emph default
Here is where 
\emph on
Selenium
\emph default
 comes into play, hence as explained above is the chosen technology to automate
 the browsers.
\end_layout

\begin_layout Subsection
Quadrant 3 tests
\end_layout

\begin_layout Standard
This tests are oriented to critique the product when it has been already
 developed and find any unwanted behaviors usually not stipulated in the
 requirementes (if BDD has been well carried out).
 That is why this tests are not automatized and require the strong involvement
 of the customer, that is what is called User Acceptance Tests which should
 not be confused with the ATDD performed in Quadrant 2.
 Also here are included usability tests with different users and real-world
 cases.
\end_layout

\begin_layout Standard
In the project, some tests in this quadrant has been taken, but as the functiona
lities are not quite numerous, they have been just a few of manual tests
 with some members of the Livelihoods Resources Centre which have critique
 the web app and provided recommendations.
\end_layout

\begin_layout Subsection
Quadrant 4 tests
\end_layout

\begin_layout Standard
Finally, the Quadrant 4 comprises all those Technology-Faced tests aimed
 to critique the quality of the final product.
 This includes from security to performance, reliability or compatibility.
 Even if all those points have been considered when developing the software,
 there have not been specific tests as it is a huge domain of tests and
 is outside the scope of this project.
\end_layout

\begin_layout Section
Analysis and Requirements
\end_layout

\begin_layout Standard
From 
\begin_inset CommandInset citation
LatexCommand cite
key "LisaCrispin2009"

\end_inset

: 
\emph on
The term test-driven development misleads practitioners who don’t under-
 stand that it’s more about design than testing.
 Code developed test-first is naturally designed for testability.
\end_layout

\begin_layout Standard

\emph on
When an agile programmer starts a coding task, she writes a test that captures
 the behavior of a tiny bit of code and then works on the code until the
 test passes.
 By building the code in small test-code-test increments, the programmer
 has a chance to think through the functionality that the customer needs.
\end_layout

\begin_layout Subsection
Technologies
\end_layout

\begin_layout Subsubsection
Liferay
\begin_inset CommandInset label
LatexCommand label
name "subsec:Liferay"

\end_inset


\end_layout

\begin_layout Standard
Discuss about Service Builder
\end_layout

\begin_layout Subsubsection
JavaServer Faces (JSF) & Components Design
\begin_inset CommandInset label
LatexCommand label
name "subsec:JSF"

\end_inset


\end_layout

\begin_layout Standard
Components design describing the whole system and invariable parts.
\end_layout

\begin_layout Standard
http://stackoverflow.com/questions/10111387/understanding-jsf-as-a-mvc-framework
\end_layout

\begin_layout Standard
http://stackoverflow.com/questions/5104094/what-components-are-mvc-in-jsf-mvc-fra
mework
\end_layout

\begin_layout Standard
http://stackoverflow.com/questions/4573419/what-are-the-main-advantages-of-mvc-pa
ttern-over-the-old-fashioned-3-layer-patte/4573554#4573554
\end_layout

\begin_layout Standard
Discuss about how JSF fits in MVC
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/jsf_scheme.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
JSF components
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:jsf_components"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Primefaces
\end_layout

\begin_layout Subsection
Object Model
\end_layout

\begin_layout Standard
The object model evolves despite of the basic structure is given by the
 technology...
 blablabla
\end_layout

\begin_layout Subsubsection
Components Design
\end_layout

\begin_layout Subsubsection
Patterns used 
\end_layout

\begin_layout Standard
Factory Pattern to create tool structures from the App Managed Bean.
\end_layout

\begin_layout Standard
Prototype Pattern to preload tools from the App Managed Bean.
\end_layout

\begin_layout Standard
Composite Pattern for CompositeStep
\end_layout

\begin_layout Subsection
Data Model
\end_layout

\begin_layout Standard
As the object model, data model will be developed through the development
 process refactoring it whenever it is necessary...
 blablabla
\end_layout

\begin_layout Section
Development
\begin_inset CommandInset label
LatexCommand label
name "sec:Development"

\end_inset


\end_layout

\begin_layout Standard
Hereafter and for the purpose of explaining the process followed in the
 development, an overview of the main issues related to each sprint has
 been written.
\end_layout

\begin_layout Subsection
First Sprint
\end_layout

\begin_layout Standard
A basic web tool (portlet) to navigate through the RAM Steps and capable
 of save the current state of each assessment was created in this step following
 a clasic development cycle (
\noun on
Design -> Development -> Testing
\noun default
).
 The portlet was called 
\family typewriter
ram-webtool
\family default
.
\end_layout

\begin_layout Subsubsection
Design
\end_layout

\begin_layout Standard
A first design was drafted to make implementation easier so the JSF architecture
 was kept in mind when coding.
 As discussed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:JSF"

\end_inset

 we will focus in Model and View parts of a MVC architecture since the Controlle
r is provided by the framework as the 
\family typewriter
Faces Servlet
\family default
.
\end_layout

\begin_layout Standard
The 
\emph on
Model 
\emph default
has two different parts due to the architecture provided by Liferay and
 JSF
\emph on
.
 
\emph default
On the one hand the model object provided by the 
\emph on
Liferay Service Builder (LSB)
\emph default
 which represents the persistence layer.
 As discussed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Liferay"

\end_inset

, 
\emph on
Liferay
\emph default
 provides a service to create the persistence layer, so it was used to create
 the object 
\family typewriter
Assessment 
\family default
which stores the current step of each created assessment, considering that
 this current steps does not depend on the session but is a value that must
 be saved in the system.
\end_layout

\begin_layout Standard
On the one hand, two beans were necessary in this sprint as part of the
 model:
\end_layout

\begin_layout Itemize
A 
\emph on
session scoped
\emph default
 bean to keep all the session information, which is needed to know where
 the user is, what is he doing, what are the next allowed actions, etc.
\end_layout

\begin_layout Itemize
A
\emph on
 request scoped
\emph default
 bean which will be responsible of bringing the needed information and which
 actually works as a bridge between the persistent object and the view.
\end_layout

\begin_layout Standard
Regarding to the view, namely the 
\emph on
JSF UI components
\emph default
 according to 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:JSF"

\end_inset

, it consists of two main JSF pages with several components:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
mainView.xhtml
\family default
 Which provides the interface to create new assessments and includes the
 
\family typewriter
assessmentsList.xhtml
\family default
 component, in charge of showing the existing assessments list.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
assessmentView.xhtml
\family default
 Which depending on what the user is doing will show the 
\family typewriter
editAssessmentForm.xhtml
\family default
 component, if user is editing the assessment, or a 
\family typewriter
ramStepX.xhtml
\family default
 component, if user is consulting the assessment.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/First Sprint Class Diagram.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the first sprint
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sprint1_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
As explained above, for the persistence layer the Liferay Service Builder
 was used, which helps developers to code simple persistence objects which
 will work with the system relational database.
 After implementing the persistence layer, the 
\family typewriter
mainView.xhtml
\family default
 was developed.
 This allowed the developer to draft the methods which would be needed from
 the beans.
 Lastly, the two beans were coded implementing the needed methods and inheriting
 their common characteristics from a common parent 
\family typewriter
AbstractBean
\family default
.
\end_layout

\begin_layout Subsubsection
Testing
\end_layout

\begin_layout Standard
Testing in this sprint was merely human guided since the testing framework
 had not yet been developed.
\end_layout

\begin_layout Subsection
Second Sprint
\begin_inset CommandInset label
LatexCommand label
name "subsec:Second-Sprint"

\end_inset


\end_layout

\begin_layout Standard
In order to implement in the future the flow chart tools within the RAM,
 a flow chart system should be developed.
 The flowchart library search didn't give results so a generic library 
\family typewriter
util
\family default
 was developed.
\end_layout

\begin_layout Subsubsection
Design
\end_layout

\begin_layout Standard
For the purpose explained above, four main classes were necessary, but in
 order to extend the library for future uses, a fifth class was created
 for non-strict flows:
\end_layout

\begin_layout Description

\family typewriter
BasicNode<T,C>
\family default
 This class is the core of the library and represents a node of the flowchart
 which is composed by a content of type 
\family typewriter
T
\family default
 and an undefined number of edges of type 
\family typewriter
C
\family default
, which in turn inherits from 
\family typewriter
Comparable
\family default
 in order to allow a flow choose among all the edges the correct one.
 This class also implements not only methods to create and destroy nodes,
 but also to find the next node in a flowchart for a given condition.
\end_layout

\begin_layout Description

\family typewriter
BasicFlowChart<T,C>
\family default
 Composed by BasicNodes implements the methods to create, edit and destroy
 a flowchart as well as the methods to navigate through the flowchart.
\end_layout

\begin_layout Description

\family typewriter
Edge<T,C>
\family default
 This is just a very simple auxiliary class only used to make easier the
 construction of 
\family typewriter
BasicFlowChart
\family default
.
\end_layout

\begin_layout Description

\family typewriter
Flow<T,C>
\family default
 This class represents a particular flow and the flow status, that is to
 say the current node of the flow.
\end_layout

\begin_layout Description

\family typewriter
PermissiveFlow<T,C>
\family default
 As explained before, this class has been created just to implement non-restrict
ive flows.
 In other words, flows allowing inputs not matching any of the conditions
 of the edges of the current node, in this case the flow will remain in
 the current node.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/flowcharts Class Diagram.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the second sprint, the flowchart 
\family typewriter
util
\family default
 library
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sprint2_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The classes were implemented in ascending order of complexity, this means
 beginning with 
\family typewriter
BasicNode
\family default
, followed by 
\family typewriter
BasicFlowChart
\family default
 and 
\family typewriter
Edge
\family default
, and finally 
\family typewriter
Flow
\family default
 and 
\family typewriter
PermissiveFlow
\family default
.
 
\end_layout

\begin_layout Subsubsection
Testing
\end_layout

\begin_layout Standard
Unit tests were developed using JUnit, as showed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint2_tests"

\end_inset

, there are three suites of tests for this sprint:
\end_layout

\begin_layout Description
BasicNodeTests Related to the 
\family typewriter
BasicNode<T,C>
\family default
 class, it comprises 10 tests.
\end_layout

\begin_layout Description
BasicFlowChartTests Related to the 
\family typewriter
BasicFlowChart<T,C>
\family default
 class, which includes 
\family typewriter
Edge<T,C>
\family default
, it comprises 25 tests.
\end_layout

\begin_layout Description
FlowTests Related to 
\family typewriter
Flow<T,C>
\family default
 and 
\family typewriter
PermissiveFlow<T,C>
\family default
 classes, it comprises 5 tests.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/flowchart_tests.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Allure screenshot with tests passed for sprint 2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint2_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Being unit tests, a little time is required to pass each test as it can
 be checked in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint2_tests_duration"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/flowchart_tests_duration.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Time graphic for tests of sprint 2
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint2_tests_duration"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Third Sprint
\end_layout

\begin_layout Standard
After some interviews with the client it was concluded that the development
 is quite limited and poorly flexible since it will just fit the current
 RAM tool requisites and it would be pretty complex to extend it.
 Finally it was decided to change the requisites and develop a web tool
 flexible enough to implement different kind of methodologies or tools.
 That is how the project has become a tool builder, and so is called Toolbuilder
, and the new portlet which implements the tools is called 
\family typewriter
tool-implementation
\family default
.
\end_layout

\begin_layout Subsubsection
Design
\end_layout

\begin_layout Standard
Although the 
\emph on
beans
\emph default
 and the 
\emph on
JSF views
\emph default
 remained the same, some generalization were done in the model to conform
 to the new requirements.
 The former 
\family typewriter
Assessment
\family default
 class is going to be replaced by a more complex structure:
\end_layout

\begin_layout Itemize
Firstly, as there must be several kind of steps depending on the specifications
 of the tool to be created, two type of steps (classes) were created in
 this sprint which inherit from the class 
\family typewriter
Step
\family default
:
\end_layout

\begin_deeper
\begin_layout Description

\family typewriter
VoidStep
\family default
 Just a type of step for developing purposes without content and/or configuratio
n.
\end_layout

\begin_layout Description

\family typewriter
CompositeStep
\family default
 This is a step which contains other steps so an structure step/substep
 can be implemented following a 
\emph on
Composite Pattern
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "ErichGamma1994"

\end_inset

.
 As it should store information about the substeps it contains, it is persistent
, therefore it was created with 
\emph on
Liferay Service Builder
\emph default
.
\end_layout

\end_deeper
\begin_layout Itemize
Moreover, an object called 
\family typewriter
\series bold
StepFactory
\family default
\series default
 is in charge of the creation of the different steps following a 
\emph on
Factory Pattern
\emph default

\begin_inset CommandInset citation
LatexCommand cite
key "ErichGamma1994"

\end_inset

.
\end_layout

\begin_layout Itemize
Lastly, a new object called 
\family typewriter
\series bold
ToolInstance
\family default
\series default
 fundamentally performs the function of the former 
\family typewriter
Assessment
\family default
 object storing all the information related to the each assessment, hereafter
 called 
\emph on
tool instance
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/Third Sprint Class Diagram.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the third sprint
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint3_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
After replacing 
\family typewriter
Assessment
\family default
 class by 
\family typewriter
ToolInstance
\family default
, the first step was to create the 
\family typewriter
Step
\family default
 class, which would be the parent of all kind of steps.
 Later a new 
\emph on
Service Builder
\emph default
 entity was created for the new 
\family typewriter
CompositeStep
\family default
 class, followed by the simple 
\family typewriter
VoidStep
\family default
 class which mocks any kind of step.
 Finally, the 
\family typewriter
StepFactory
\family default
 class was implemented to create steps.
\end_layout

\begin_layout Subsubsection
Testing
\end_layout

\begin_layout Standard
In this sprint the testing framework was implemented and the Behavior Driven
 Development (BDD) was set up for next Sprints.
 Tests scenarios were developed for the three existing features:
\end_layout

\begin_layout Enumerate
Tool Instance Creation
\end_layout

\begin_layout Enumerate
Navigate through steps
\end_layout

\begin_layout Enumerate
Tool Instance Deletion
\end_layout

\begin_layout Standard
For each feature, the different scenarios or user stories (in compliance
 with the BDD methodology) were created.
 The development of the tests also required some debugging, as it is shown
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint3_tests_fail"

\end_inset

 the first time tests were executed there were some defects.
 After debugging it was checked that defects were caused by bugs in the
 tests, particularly by the way 
\emph on
Selenium WebElement
\emph default
s were selected because the 
\emph on
XPath
\emph default
 did not match with the web elements outputted by the portlet.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint3_tests_fail.png
	width 15cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 3 tests failed at the beginning and required debugging
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint3_tests_fail"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint3_tests_pass"

\end_inset

 is shown the tests result after debugging.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint3_tests_pass.png
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 3 tests passed successfully after debugging
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint3_tests_pass"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Fourth Sprint
\end_layout

\begin_layout Standard
As tools should be able to be customized and many occurrences of each tool
 may be created, it becomes necessary to make code refactoring in order
 to divide the two parts: 
\emph on
Tool Definitions
\emph default
 and 
\emph on
Tool Instances
\emph default
.
 So after refactoring we have separately the objects related to the tool
 structure -hereafter 
\emph on
Tool Definition
\emph default
- and the objects related to the tool occurrences -hereafter 
\emph on
Tool Instances
\emph default
.
\end_layout

\begin_layout Subsubsection
Redesign / Refactoring
\end_layout

\begin_layout Standard
Tool definitions are separated from tool instances creating two different
 classes (
\family typewriter
ToolDef
\family default
 and 
\family typewriter
ToolInstance
\family default
), likewise steps definitions should be separated from step implementations,
 for that purpose abstract classes 
\family typewriter
StepDef
\family default
 and 
\family typewriter
Step
\family default
 were created to steps inheriting them, the first one representing the step
 definition and the second one representing the step within the 
\emph on
tool instance
\emph default
, that is to say the step occurrence.
\end_layout

\begin_layout Standard
As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint4_design"

\end_inset

, a symmetric design has been implemented which will be replicated for each
 step:
\end_layout

\begin_layout Itemize
In blue the definition part, with 
\family typewriter
StepDef
\family default
, 
\family typewriter
CompositeStepDef
\family default
 and 
\family typewriter
ToolDef
\family default
 classes.
 All them related to the 
\emph on
tool definitions
\emph default
 which will define the structure and configuration of each tools and each
 step.
\end_layout

\begin_layout Itemize
In red the instances part, with 
\family typewriter
Step
\family default
, 
\family typewriter
CompositeStep
\family default
 and 
\family typewriter
ToolInstance
\family default
 classes.
 These classes represent to the status of each tool instance.
 Namely the current step for each tool instance, the status of each step
 and all the related information.
\end_layout

\begin_layout Standard
As we can see in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint4_design"

\end_inset

, 
\emph on
Factory
\emph default
 and 
\emph on
Composite Patterns
\emph default
 are still being used after refactoring.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/StepFactory Class Diagram.png
	scale 80
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Design for the fourth sprint
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint4_design"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the same way, database needed to be redesigned in order to match with
 the new classes design.
 As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint4_db"

\end_inset

 there is also a symmetry between the definition part, on top, and the instances
 part.
 Each 
\emph on
Tool
\emph default
 (both definition and instance) contains a 
\emph on
Composite Step
\emph default
, which as a relationship 1 to 1 with the 
\emph on
Step
\emph default
 table (as class 
\family typewriter
CompositeStep
\family default
 inherits from 
\family typewriter
Step
\family default
) but also a relationship N to N because one 
\emph on
composite step
\emph default
 contains several 
\emph on
steps
\emph default
 and one 
\emph on
step
\emph default
 could be in several 
\emph on
composite step
\emph default
s.
 Although there is data redundancy in the N to N relationships -which in
 fact can be simplified removing the relationship between tables 
\emph on
CompositeStepDBE
\emph default
 and 
\emph on
StepDBE
\emph default
- at this sprint it was felt useful to make easier the development of the
 associated classes.
\end_layout

\begin_layout Standard
Finally, a new 
\emph on
managed bean application scoped
\emph default
 was created called 
\family typewriter
FactoryBean
\family default
.
 This bean manages and stores the different type of steps and existing tool
 definitions and it also stores the tool definition which is in use.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/database/ERD_S4.png
	width 14cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Database design for the fourth sprint
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint4_db"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Test design
\end_layout

\begin_layout Standard
Tests remained the same since no new user features were implemented.
 Anyhow, the test were passed to guarantee refactoring has been successful
 and accomplishes all the required features.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The only aspect to note during implementation was the difficulty of working
 with 
\emph on
Liferay Service Builder (LSB)
\emph default
 and its way of supporting N to N relationships.
 After exploring how to do it the
\emph on
 
\emph default
persistent objects were created, the 
\emph on
LSB
\emph default
 allows to create N to N relationships but, as it would be realized later
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Tenth-Sprint"

\end_inset

, it is not the best option due to the poor customization allowed.
\end_layout

\begin_layout Subsection
Fifth Sprint
\end_layout

\begin_layout Standard
Due to the breakup between 
\emph on
tool definition
\emph default
 and 
\emph on
tool instance
\emph default
 it is needful to define permissions to access both areas.
 Thus, the definition should be used by tool administrators, while the instances
 should be available to logged users, but non logged users will be able
 to see tools instances not having permissions to use them.
 Therefore, the permission scheme should be defined to provide limited access
 based on user role following the scheme in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "table:sprint5_permissions"

\end_inset

.
 In addition to the 
\family typewriter
tool-implementation
\family default
 portlet, who is in charge of the tool instances, a new portlet called 
\family typewriter
tool-definition
\family default
 has been added to manage the tool definitions, it will be created in the
 next sprint.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="2.2cm">
<column alignment="center" valignment="top" width="1.5cm">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Portlet Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Permission
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Anonymous user
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Logged user
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
tool-implementation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Create Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Use/Edit Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Delete Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
View Tool Instance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
tool-definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Choose Tool Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Create Tool Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Delete Tool Definition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
✔
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Permissions scheme for Sprint 5
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "table:sprint5_permissions"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Test design
\end_layout

\begin_layout Standard
The functional tests were modified to include permissions restrictions,
 so a step for log in the user was added to each existing scenario -as shown
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint5_tests"

\end_inset

 which in the step 2 logs the users.
 Also 3 more scenarios were added to test the restrictions for non logged
 users, one for each feature.
 No tests have been added for the 
\family typewriter
tool-definition
\family default
 portlet as it will be implemented in the next step.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint5_tests_pass.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 5 tests passed successfully
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint5_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
To code the permission restrictions, the Liferay permissions scheme has
 been used.
 It allows to define permissions for the portlets and the model based on
 the user's role through a xml file.
 As shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:sprint5_perm"

\end_inset

, three permissions have been configured: add, delete and edit; those three
 permissions are allowed to any site member but restricted to guests, namely
 anonymous users.
 As can be noted only permissions for the 
\family typewriter
tool-implementation
\family default
 portlet were defined in this sprint, since 
\family typewriter
tool-definition
\family default
 portlet implementation will be addressed in the next sprint.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML,float,basicstyle={\small\ttfamily},tabsize=3,keywordstyle={\color{green}},backgroundcolor={\color{grey}},morekeywords={resource-action-mapping,portlet-resource,portlet-name,permissions,supports,action-key,site-member-defaults,guest-defaults,guest-unsupported,model-resource,model-name,portlet-ref},alsoletter={-}"
inline false
status open

\begin_layout Plain Layout

<resource-action-mapping>
\end_layout

\begin_layout Plain Layout

	<model-resource>
\end_layout

\begin_layout Plain Layout

		<model-name>org.lrc.liferay.toolbuilder.model</model-name>
\end_layout

\begin_layout Plain Layout

		<portlet-ref>
\end_layout

\begin_layout Plain Layout

			<portlet-name>tool-implementation</portlet-name>
\end_layout

\begin_layout Plain Layout

		</portlet-ref>
\end_layout

\begin_layout Plain Layout

		<permissions>
\end_layout

\begin_layout Plain Layout

			<supports>
\end_layout

\begin_layout Plain Layout

				<action-key>ADD_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>DEL_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>EDIT_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

			</supports>
\end_layout

\begin_layout Plain Layout

			<site-member-defaults>
\end_layout

\begin_layout Plain Layout

				<action-key>ADD_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>DEL_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>EDIT_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

			</site-member-defaults>
\end_layout

\begin_layout Plain Layout

			<guest-defaults />
\end_layout

\begin_layout Plain Layout

			<guest-unsupported>
\end_layout

\begin_layout Plain Layout

				<action-key>ADD_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>DEL_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

				<action-key>EDIT_TOOL_INSTANCE</action-key>
\end_layout

\begin_layout Plain Layout

			</guest-unsupported>
\end_layout

\begin_layout Plain Layout

		</permissions>
\end_layout

\begin_layout Plain Layout

	</model-resource>
\end_layout

\begin_layout Plain Layout

</resource-action-mapping>
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:sprint5_perm"

\end_inset

Permissions configuration file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Sixth Sprint
\end_layout

\begin_layout Standard
Once the back-end for tool definition was developed it was necessary to
 create the interface so admin users can choose between the existing tool
 definitions, therefore in this sprint the portlet 
\family typewriter
tool-definition
\family default
 was created.
\end_layout

\begin_layout Subsubsection
Test design
\end_layout

\begin_layout Standard
Following BDD methodology, behavior of the system for this new feature was
 defined by developing some four scenarios.
 In 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint6_tests"

\end_inset

 these tests, passed after the implementation, are shown.
\end_layout

\begin_layout Itemize
The admin user chooses an existing Tool Definition different to the chosen
 one.
\end_layout

\begin_layout Itemize
The admin user chooses another existing Tool Definition, which in fact means
 choosing back the last Tool Definition.
\end_layout

\begin_layout Itemize
Access to tool-definition portlet forbidden for a logged user who is not
 admin.
\end_layout

\begin_layout Itemize
Access to tool-definition portlet forbidden for an anonymous user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint6_tests_pass.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sprint 6 tests passed successfully
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint6_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The new portlet called 
\family typewriter
tool-definition
\family default
 was created only accessible for admin users and available through the 
\emph on
Site Administration -> Content
\emph default
 section, so the 
\family typewriter
control-panel-entry-category
\family default
 parameter was defined as 
\family typewriter
site_administration.content
\family default
.
 Thus, the permission scheme from 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:sprint5_perm"

\end_inset

 was implemented because that section is only accessible for admin users.
\end_layout

\begin_layout Standard
As the current tool definition is stored in the 
\emph on
application scoped bean
\emph default
 
\family typewriter
FactoryBean
\family default
, only the view 
\family typewriter
adminView.xhtml
\family default
 needed to be developed in this sprint.
 The list of tool definitions was implemented through a 
\family typewriter
<p:datatable>
\family default
 from 
\emph on
Primefaces
\emph default
.
 Some troubles were also founded in order to refresh the page when a tool
 definition was chosen but, finally it was decided only to render again
 the form the button was embedded in, though an 
\emph on
Ajax
\emph default
 call.
\end_layout

\begin_layout Subsection
Seventh Sprint
\end_layout

\begin_layout Standard
A use case to create a new tool definition is defined as the first step
 to configure that new tool definition which will be able to be selected
 in the 
\family typewriter
adminView.xhtml
\family default
 and used by logged users.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
As shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint7_tests"

\end_inset

, the feature 
\emph on
Create Tool Definition
\series bold
 
\series default
\emph default
has been defined with three scenarios, two of them show an error when trying
 to create an existing tool definition.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint7_tests_pass.png
	width 12cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Test scenarios for sprint 7
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint7_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
In order to have different views for tool definition choosing and tool definitio
n edition, a new 
\family typewriter
toolDefConfig.xhtml
\family default
 file was created which is called to configure the tool definitions.
 In this case, the name of the tool to work with is passed as part of the
 URL (using 
\family typewriter
GET
\family default
 method instead of 
\family typewriter
POST
\family default
) so the page can be addressed straight away by any admin user foreseeing
 a future option of create a tool definition from other different page.
\end_layout

\begin_layout Standard
In addition, a way to show different step definitions should be defined,
 so a tabs view was used due to the familiarity of users with this kind
 of interface and the easiness of development provided by the Primefaces
 
\family typewriter
tabView
\family default
 resource.
\end_layout

\begin_layout Standard
Finally, it was necessary to develop two new managed beans, colored in blue
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint7_beans"

\end_inset

:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
ToolDefListBacking
\family default
 It is a 
\emph on
request scoped
\emph default
 bean and it is called when creating a new tool instance in order to verify
 the name -check if it is not void or if it already exists, so it prevents
 database exceptions- and to create the URL to create the new tool definition.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\family typewriter
EditToolDefBacking
\family default
 It is a 
\emph on
view scoped
\emph default
 bean and it is related to the view 
\family typewriter
toolDefConfig.xhtml
\family default
, so it stores the necessary data and provides methods to save it.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/ferda/informatica/development/liferay/portlets/toolBuilder-portlet/doc/uml/exported/sprint7 beans Class Diagram.png
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Existing managed beans in sprint 7
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint7_beans"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eighth Sprint
\end_layout

\begin_layout Standard
An interface to add steps to the tool definition should be created so after
 creating a new tool definition, admin users were able to add different
 steps and give content to the tool.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
The fact of adding steps to a new tool definition was considered as part
 of the behavior 
\emph on
Create Tool Definition
\emph default
, so some new scenarios were appended to the existing feature.
 There were some issues when coding the steps since, as it is explained
 in the next implementation section, the used framework creates a new 
\family typewriter
<iframe>
\family default
 for a new dialog; this implied that the elements were not founded by the
 
\emph on
Selenium WebDriver
\emph default
.
 Finally it was fixed when finding out that 
\emph on
Selenium WebDriver
\emph default
 defines the 
\family typewriter
iframe
\family default
 which is working in, so if it changes it should be switched -calling the
 method 
\family typewriter
driver.switchTo.frame()
\family default
- in order to allow the driver to find those elements.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint8_tests_pass.png
	width 12cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Test scenarios for sprint 8 belong to the same feature than sprint 7
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint8_tests"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The new view should be embedded in the 
\family typewriter
toolDefConfig.xhtml
\family default
 view, but it is worth to note that it should be independent since it was
 going to be called not only to add steps to the main tool definition, but
 also to add steps to any of the nested composite steps.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint8_dialog.png
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Dialog to choose the new step type
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint8_dialog"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order to have an independent view which could be embedded, the 
\emph on
Primefaces Dialog Framework
\emph default
 was used so a new view called 
\family typewriter
selectStepDefDialog.xhtml
\family default
 was created and it is shown as a dialog (
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sprint8_dialog"

\end_inset

) when the user is going to create a new step definition.
 Thus, the choice of the new step type is made by the user in this new dialog,
 which returns it (the step type) to 
\family typewriter
toolDefConfig.xhtml
\family default
 via 
\family typewriter
POST
\family default
 method.
 The 
\emph on
Primefaces Dialog Framework
\emph default
 creates a new 
\family typewriter
<iframe>
\family default
 and embeds the new view, so it is completely independent and it allows
 to call the view from other different pages.
\end_layout

\begin_layout Standard
On the other side, the view 
\family typewriter
toolDefConfig.xhtml
\family default
 was modified to show the created steps, the chosen method to do that was
 using the 
\emph on
Primefaces
\emph default
 
\family typewriter
<p:tabview>
\family default
 tag as the tab interface uses to be familiar to users.
\end_layout

\begin_layout Subsection
Ninth Sprint
\end_layout

\begin_layout Standard
After creating tool steps, next needed feature was to delete tool steps,
 which is addressed in this sprint.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
As the deletion was only made from the 
\family typewriter
adminView.xhtml
\family default
 view, the tests created for this feature had not many different cases.
 Only two tests cases were made: one for void tool definitions and one for
 filled tool definitions.
 The deletion of all the database registers was also checked.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
, which moreover has the attribute 
\family typewriter
closable
\family default
 to implement the steps deletion by doing and 
\emph on
Ajax
\emph default
 call when the 
\family typewriter
tabClose
\family default
 event triggers.
\end_layout

\begin_layout Subsection
Tenth Sprint
\begin_inset CommandInset label
LatexCommand label
name "subsec:Tenth-Sprint"

\end_inset


\end_layout

\begin_layout Standard
At this point, and due to an interview with the client, it was realized
 that steps order should be able to be modified within the tool definition
 configuration.
 Up to this moment, steps were added in consecutive order, from first to
 last, so if users wanted to modify the order the only way was deleting
 existing steps and creating them again.
 To develop this new feature it was necessary to modify the back-end since
 the model did not support steps order, so a refactoring was addressed in
 this sprint.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests for this sprint are just unit tests which verify the insertion of
 the steps relationships in the database.
 TODO
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
The database update implied, as showed in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sprint10_db"

\end_inset

, merely adding a step order field in the N to N relationships between 
\family typewriter
CSDef_StepDef
\family default
 and 
\family typewriter
CS_Step
\family default
 tables.
 The problem arose when trying to do it through the 
\emph on
Liferay Service Builder
\emph default
 
\emph on
(LSB)
\emph default
, after some researching and attempts it was clear that it was not supported.
 So finally the 
\emph on
LSB
\emph default
 feature to create N to N relationships was not used, and the relationships
 tables were created just any other table with 
\emph on
LSB
\emph default
 and adding the new 
\family typewriter
stepIndex
\family default
 field.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/sprint10_db.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Database modification of relationship table
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sprint10_db"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As the database was modified, the related methods for adding and removing
 were also modified to include the new field.
 Also two new methods to update the relationship called 
\family typewriter
reorderStepDef
\family default
 and 
\family typewriter
saveNewStepsOrder
\family default
 were created to implement the new feature in the back-end.
\end_layout

\begin_layout Subsection
Eleventh Sprint
\end_layout

\begin_layout Standard
Once the back-end supports steps order it is time to modify the interface
 so admin users can change the order of the steps in a tool definition.
 It involved looking the possibilities of doing it in a user-friendly drag-and-d
rop way with the current tabs view.
 Given the impossibility of doing that with the existing Primefaces 
\family typewriter
<p:tab />
\family default
 tag the whole steps interface was redesigned.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Tests for this sprint are those to move the steps but with regression tests
 from eighth sprint in order to assure the proper functioning of the redesigned
 interface.
 Difficult to drag and drop thorough Selenium so Java Robot should be used.
\end_layout

\begin_layout Standard
Some tests were developed for this feature, since simple steps sorting until
 more complex sorting involving several steps.
 During tests implementation there were issues regarding the 
\emph on
Selenium
\emph default
 drag-and-drop support, it was not possible to use it with the chosen interface
 so finally it was decided to use the 
\family typewriter
java.awt.Robot
\family default
 class to move the mouse and simulate the drag-and-drop movement.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
which means launch a dialog and drag-and-drop the Create interface to modify
 steps order in tool definitions.
 Due to the main
\end_layout

\begin_layout Subsection
Twelfth Sprint
\end_layout

\begin_layout Standard
After interview with the client she realized that it was not possible to
 delete Tool Definitions, so this feature should be added.
 Also it was necessary to avoid the user to delete or edit tool definitions
 which are selected or which have already created tool instances.
\end_layout

\begin_layout Subsubsection
Test Design
\end_layout

\begin_layout Standard
Behavior were designed for both features:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Deleting A delete button exists for each tool definition so when the user
 clicks on it a dialog to confirm will appear and if it is confirmed the
 tool definition will disappear from the view.
 
\begin_inset Marginal
status open

\begin_layout Plain Layout
How I test the toolDef is deleted in the database?
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Restricting When a tool definition is selected or it has created tool instance
 it will be impossible to delete or edit it.
 So buttons should be disabled and a tool-tip will showed when moving the
 mouse over them.
 Four scenarios has been created for this feature: three for the cases of
 not allowing edit or deletion and one where the system must allows it.
\end_layout

\begin_layout Subsubsection
Implementation
\end_layout

\begin_layout Standard
Coding the delete button only required adding a new button to each row of
 the 
\family typewriter
<p:dataTable>
\family default
 inside a
\family typewriter
dminView.xhtml
\family default
.
 That button calls the 
\family typewriter
removeToolDef(String toolDefName)
\family default
 function from the 
\family typewriter
FactoryBean
\family default
 object, which is responsible of calling the persistent object and all the
 steps to ensure their deletion.
\end_layout

\begin_layout Standard
Regarding the restrictions...
 Tool-tip from Primefaces not working related to 
\family typewriter
commandButton
\family default
, so it was linked to a new div which contains all the buttons.
\end_layout

\begin_layout Subsection
Thirteenth Sprint
\end_layout

\begin_layout Standard
Create interface to modify Composite Step Type
\end_layout

\begin_layout Subsection
Fourteenth Sprint
\end_layout

\begin_layout Standard
Create Web Content Step Type and show the step
\end_layout

\begin_layout Subsection
Fifteenth Sprint
\end_layout

\begin_layout Standard
Create Web Content Step Type configuration interface
\end_layout

\begin_layout Subsection
Sixteenth Sprint
\end_layout

\begin_layout Standard
Create Basic RAM Tool
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Usability and modificabilidad/extensibilidad
\end_layout

\begin_layout Standard
Mala medición del tiempo, demasiado optimismo
\end_layout

\begin_layout Standard
Inclusión de herramientas sobre la marcha no va muy bien.
 Necesidad de establecer el framework desde el inicio.
\end_layout

\begin_layout Standard
Tiempo elevado de configuración de herramientas y configuración del entorno.
\end_layout

\begin_layout Standard
Adopting new techniques has required an extra effort and time in setting-up
 frameworks and procedures, but it has been worth in order to improve the
 used software methodology and make it .
\end_layout

\begin_layout Section
Discussion
\end_layout

\begin_layout Standard
2 Párrafos, destilado de los resultados
\end_layout

\begin_layout Standard
For the future: Performance testing
\end_layout

\begin_layout Section
Appendices
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "pfc_bibliography"
options "plain"

\end_inset


\end_layout

\end_body
\end_document

/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.lrc.liferay.toolbuilder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import org.lrc.liferay.toolbuilder.model.InstalledStep;
import org.lrc.liferay.toolbuilder.model.InstalledStepModel;
import org.lrc.liferay.toolbuilder.model.InstalledStepSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the InstalledStep service. Represents a row in the &quot;lrc_tb_InstalledStep&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.lrc.liferay.toolbuilder.model.InstalledStepModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InstalledStepImpl}.
 * </p>
 *
 * @author Fernando Su√°rez
 * @see InstalledStepImpl
 * @see org.lrc.liferay.toolbuilder.model.InstalledStep
 * @see org.lrc.liferay.toolbuilder.model.InstalledStepModel
 * @generated
 */
@JSON(strict = true)
public class InstalledStepModelImpl extends BaseModelImpl<InstalledStep>
	implements InstalledStepModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a installed step model instance should use the {@link org.lrc.liferay.toolbuilder.model.InstalledStep} interface instead.
	 */
	public static final String TABLE_NAME = "lrc_tb_InstalledStep";
	public static final Object[][] TABLE_COLUMNS = {
			{ "stepType", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "namespace", Types.VARCHAR },
			{ "className", Types.VARCHAR },
			{ "stepDescription", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table lrc_tb_InstalledStep (stepType VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,namespace VARCHAR(75) null,className VARCHAR(75) null,stepDescription VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table lrc_tb_InstalledStep";
	public static final String ORDER_BY_JPQL = " ORDER BY installedStep.stepType ASC";
	public static final String ORDER_BY_SQL = " ORDER BY lrc_tb_InstalledStep.stepType ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.lrc.liferay.toolbuilder.model.InstalledStep"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.lrc.liferay.toolbuilder.model.InstalledStep"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.lrc.liferay.toolbuilder.model.InstalledStep"),
			true);
	public static long STEPTYPE_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static InstalledStep toModel(InstalledStepSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		InstalledStep model = new InstalledStepImpl();

		model.setStepType(soapModel.getStepType());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setNamespace(soapModel.getNamespace());
		model.setClassName(soapModel.getClassName());
		model.setStepDescription(soapModel.getStepDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<InstalledStep> toModels(InstalledStepSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<InstalledStep> models = new ArrayList<InstalledStep>(soapModels.length);

		for (InstalledStepSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.lrc.liferay.toolbuilder.model.InstalledStep"));

	public InstalledStepModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _stepType;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setStepType(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _stepType;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return InstalledStep.class;
	}

	@Override
	public String getModelClassName() {
		return InstalledStep.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("stepType", getStepType());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("namespace", getNamespace());
		attributes.put("className", getClassName());
		attributes.put("stepDescription", getStepDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String stepType = (String)attributes.get("stepType");

		if (stepType != null) {
			setStepType(stepType);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String namespace = (String)attributes.get("namespace");

		if (namespace != null) {
			setNamespace(namespace);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		String stepDescription = (String)attributes.get("stepDescription");

		if (stepDescription != null) {
			setStepDescription(stepDescription);
		}
	}

	@JSON
	@Override
	public String getStepType() {
		if (_stepType == null) {
			return StringPool.BLANK;
		}
		else {
			return _stepType;
		}
	}

	@Override
	public void setStepType(String stepType) {
		_columnBitmask |= STEPTYPE_COLUMN_BITMASK;

		if (_originalStepType == null) {
			_originalStepType = _stepType;
		}

		_stepType = stepType;
	}

	public String getOriginalStepType() {
		return GetterUtil.getString(_originalStepType);
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNamespace() {
		if (_namespace == null) {
			return StringPool.BLANK;
		}
		else {
			return _namespace;
		}
	}

	@Override
	public void setNamespace(String namespace) {
		_namespace = namespace;
	}

	@JSON
	@Override
	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		_className = className;
	}

	@JSON
	@Override
	public String getStepDescription() {
		if (_stepDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _stepDescription;
		}
	}

	@Override
	public void setStepDescription(String stepDescription) {
		_stepDescription = stepDescription;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public InstalledStep toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (InstalledStep)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		InstalledStepImpl installedStepImpl = new InstalledStepImpl();

		installedStepImpl.setStepType(getStepType());
		installedStepImpl.setGroupId(getGroupId());
		installedStepImpl.setCompanyId(getCompanyId());
		installedStepImpl.setUserId(getUserId());
		installedStepImpl.setUserName(getUserName());
		installedStepImpl.setCreateDate(getCreateDate());
		installedStepImpl.setModifiedDate(getModifiedDate());
		installedStepImpl.setNamespace(getNamespace());
		installedStepImpl.setClassName(getClassName());
		installedStepImpl.setStepDescription(getStepDescription());

		installedStepImpl.resetOriginalValues();

		return installedStepImpl;
	}

	@Override
	public int compareTo(InstalledStep installedStep) {
		String primaryKey = installedStep.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof InstalledStep)) {
			return false;
		}

		InstalledStep installedStep = (InstalledStep)obj;

		String primaryKey = installedStep.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		InstalledStepModelImpl installedStepModelImpl = this;

		installedStepModelImpl._originalStepType = installedStepModelImpl._stepType;

		installedStepModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<InstalledStep> toCacheModel() {
		InstalledStepCacheModel installedStepCacheModel = new InstalledStepCacheModel();

		installedStepCacheModel.stepType = getStepType();

		String stepType = installedStepCacheModel.stepType;

		if ((stepType != null) && (stepType.length() == 0)) {
			installedStepCacheModel.stepType = null;
		}

		installedStepCacheModel.groupId = getGroupId();

		installedStepCacheModel.companyId = getCompanyId();

		installedStepCacheModel.userId = getUserId();

		installedStepCacheModel.userName = getUserName();

		String userName = installedStepCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			installedStepCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			installedStepCacheModel.createDate = createDate.getTime();
		}
		else {
			installedStepCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			installedStepCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			installedStepCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		installedStepCacheModel.namespace = getNamespace();

		String namespace = installedStepCacheModel.namespace;

		if ((namespace != null) && (namespace.length() == 0)) {
			installedStepCacheModel.namespace = null;
		}

		installedStepCacheModel.className = getClassName();

		String className = installedStepCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			installedStepCacheModel.className = null;
		}

		installedStepCacheModel.stepDescription = getStepDescription();

		String stepDescription = installedStepCacheModel.stepDescription;

		if ((stepDescription != null) && (stepDescription.length() == 0)) {
			installedStepCacheModel.stepDescription = null;
		}

		return installedStepCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{stepType=");
		sb.append(getStepType());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", namespace=");
		sb.append(getNamespace());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", stepDescription=");
		sb.append(getStepDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("org.lrc.liferay.toolbuilder.model.InstalledStep");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>stepType</column-name><column-value><![CDATA[");
		sb.append(getStepType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>namespace</column-name><column-value><![CDATA[");
		sb.append(getNamespace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stepDescription</column-name><column-value><![CDATA[");
		sb.append(getStepDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = InstalledStep.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			InstalledStep.class
		};
	private String _stepType;
	private String _originalStepType;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _namespace;
	private String _className;
	private String _stepDescription;
	private long _columnBitmask;
	private InstalledStep _escapedModel;
}
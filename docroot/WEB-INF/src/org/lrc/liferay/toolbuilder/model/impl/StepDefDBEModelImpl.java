/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.lrc.liferay.toolbuilder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.lrc.liferay.toolbuilder.model.StepDefDBE;
import org.lrc.liferay.toolbuilder.model.StepDefDBEModel;
import org.lrc.liferay.toolbuilder.model.StepDefDBESoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the StepDefDBE service. Represents a row in the &quot;lrc_tb_StepDefDBE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.lrc.liferay.toolbuilder.model.StepDefDBEModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StepDefDBEImpl}.
 * </p>
 *
 * @author Fernando Su√°rez
 * @see StepDefDBEImpl
 * @see org.lrc.liferay.toolbuilder.model.StepDefDBE
 * @see org.lrc.liferay.toolbuilder.model.StepDefDBEModel
 * @generated
 */
@JSON(strict = true)
public class StepDefDBEModelImpl extends BaseModelImpl<StepDefDBE>
	implements StepDefDBEModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Step Definition model instance should use the {@link org.lrc.liferay.toolbuilder.model.StepDefDBE} interface instead.
	 */
	public static final String TABLE_NAME = "lrc_tb_StepDefDBE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "stepDefDBEId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "stepType", Types.VARCHAR },
			{ "stepTypeId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table lrc_tb_StepDefDBE (stepDefDBEId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,stepType VARCHAR(75) null,stepTypeId LONG,name VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table lrc_tb_StepDefDBE";
	public static final String ORDER_BY_JPQL = " ORDER BY stepDefDBE.stepDefDBEId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY lrc_tb_StepDefDBE.stepDefDBEId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.lrc.liferay.toolbuilder.model.StepDefDBE"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.lrc.liferay.toolbuilder.model.StepDefDBE"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.lrc.liferay.toolbuilder.model.StepDefDBE"),
			true);
	public static long STEPDEFDBEID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static StepDefDBE toModel(StepDefDBESoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		StepDefDBE model = new StepDefDBEImpl();

		model.setStepDefDBEId(soapModel.getStepDefDBEId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStepType(soapModel.getStepType());
		model.setStepTypeId(soapModel.getStepTypeId());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<StepDefDBE> toModels(StepDefDBESoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<StepDefDBE> models = new ArrayList<StepDefDBE>(soapModels.length);

		for (StepDefDBESoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.lrc.liferay.toolbuilder.model.StepDefDBE"));

	public StepDefDBEModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _stepDefDBEId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStepDefDBEId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _stepDefDBEId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StepDefDBE.class;
	}

	@Override
	public String getModelClassName() {
		return StepDefDBE.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("stepDefDBEId", getStepDefDBEId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("stepType", getStepType());
		attributes.put("stepTypeId", getStepTypeId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long stepDefDBEId = (Long)attributes.get("stepDefDBEId");

		if (stepDefDBEId != null) {
			setStepDefDBEId(stepDefDBEId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String stepType = (String)attributes.get("stepType");

		if (stepType != null) {
			setStepType(stepType);
		}

		Long stepTypeId = (Long)attributes.get("stepTypeId");

		if (stepTypeId != null) {
			setStepTypeId(stepTypeId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	@Override
	public long getStepDefDBEId() {
		return _stepDefDBEId;
	}

	@Override
	public void setStepDefDBEId(long stepDefDBEId) {
		_columnBitmask |= STEPDEFDBEID_COLUMN_BITMASK;

		if (!_setOriginalStepDefDBEId) {
			_setOriginalStepDefDBEId = true;

			_originalStepDefDBEId = _stepDefDBEId;
		}

		_stepDefDBEId = stepDefDBEId;
	}

	public long getOriginalStepDefDBEId() {
		return _originalStepDefDBEId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getStepType() {
		if (_stepType == null) {
			return StringPool.BLANK;
		}
		else {
			return _stepType;
		}
	}

	@Override
	public void setStepType(String stepType) {
		_stepType = stepType;
	}

	@JSON
	@Override
	public long getStepTypeId() {
		return _stepTypeId;
	}

	@Override
	public void setStepTypeId(long stepTypeId) {
		_stepTypeId = stepTypeId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			StepDefDBE.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StepDefDBE toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StepDefDBE)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StepDefDBEImpl stepDefDBEImpl = new StepDefDBEImpl();

		stepDefDBEImpl.setStepDefDBEId(getStepDefDBEId());
		stepDefDBEImpl.setGroupId(getGroupId());
		stepDefDBEImpl.setCompanyId(getCompanyId());
		stepDefDBEImpl.setUserId(getUserId());
		stepDefDBEImpl.setUserName(getUserName());
		stepDefDBEImpl.setCreateDate(getCreateDate());
		stepDefDBEImpl.setModifiedDate(getModifiedDate());
		stepDefDBEImpl.setStepType(getStepType());
		stepDefDBEImpl.setStepTypeId(getStepTypeId());
		stepDefDBEImpl.setName(getName());
		stepDefDBEImpl.setDescription(getDescription());

		stepDefDBEImpl.resetOriginalValues();

		return stepDefDBEImpl;
	}

	@Override
	public int compareTo(StepDefDBE stepDefDBE) {
		long primaryKey = stepDefDBE.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StepDefDBE)) {
			return false;
		}

		StepDefDBE stepDefDBE = (StepDefDBE)obj;

		long primaryKey = stepDefDBE.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		StepDefDBEModelImpl stepDefDBEModelImpl = this;

		stepDefDBEModelImpl._originalStepDefDBEId = stepDefDBEModelImpl._stepDefDBEId;

		stepDefDBEModelImpl._setOriginalStepDefDBEId = false;

		stepDefDBEModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StepDefDBE> toCacheModel() {
		StepDefDBECacheModel stepDefDBECacheModel = new StepDefDBECacheModel();

		stepDefDBECacheModel.stepDefDBEId = getStepDefDBEId();

		stepDefDBECacheModel.groupId = getGroupId();

		stepDefDBECacheModel.companyId = getCompanyId();

		stepDefDBECacheModel.userId = getUserId();

		stepDefDBECacheModel.userName = getUserName();

		String userName = stepDefDBECacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			stepDefDBECacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			stepDefDBECacheModel.createDate = createDate.getTime();
		}
		else {
			stepDefDBECacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			stepDefDBECacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			stepDefDBECacheModel.modifiedDate = Long.MIN_VALUE;
		}

		stepDefDBECacheModel.stepType = getStepType();

		String stepType = stepDefDBECacheModel.stepType;

		if ((stepType != null) && (stepType.length() == 0)) {
			stepDefDBECacheModel.stepType = null;
		}

		stepDefDBECacheModel.stepTypeId = getStepTypeId();

		stepDefDBECacheModel.name = getName();

		String name = stepDefDBECacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			stepDefDBECacheModel.name = null;
		}

		stepDefDBECacheModel.description = getDescription();

		String description = stepDefDBECacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			stepDefDBECacheModel.description = null;
		}

		return stepDefDBECacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{stepDefDBEId=");
		sb.append(getStepDefDBEId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", stepType=");
		sb.append(getStepType());
		sb.append(", stepTypeId=");
		sb.append(getStepTypeId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("org.lrc.liferay.toolbuilder.model.StepDefDBE");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>stepDefDBEId</column-name><column-value><![CDATA[");
		sb.append(getStepDefDBEId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stepType</column-name><column-value><![CDATA[");
		sb.append(getStepType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stepTypeId</column-name><column-value><![CDATA[");
		sb.append(getStepTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StepDefDBE.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			StepDefDBE.class
		};
	private long _stepDefDBEId;
	private long _originalStepDefDBEId;
	private boolean _setOriginalStepDefDBEId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _stepType;
	private long _stepTypeId;
	private String _name;
	private String _description;
	private long _columnBitmask;
	private StepDefDBE _escapedModel;
}